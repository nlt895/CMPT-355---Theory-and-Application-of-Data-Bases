{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Kristine Trinh\
nlt895\
11190412\
Assignment 1\
\

\b \ul Part 1\

\b0 \ulnone \
1) The possible candidate keys for the 
\b Departments
\b0  table are: id, code and university_id\
\
2) If we didn\'92t use a surrogate key for the primary key on the 
\b Enrollments 
\b0 table, I would use natural key as the composite primary key for the table which are 
\b student_id
\b0 ,
\b  section_id 
\b0 and 
\b status_code
\b0 . Because they are unique keys on the table which it already exists and have real-world meaning. Also, this composite primary key can help ensuring that there is no duplicate records and that there are only row for a key. \
\
3) \
(a) Two different approaches to make sure that only ISO gender codes (M,F,U,N) are valid values to insert into the gender column are: \
	1) Using 
\b CHECK constraint 
\b0 on gender column of 
\b \'93students\'94 
\b0 table
\b  
\b0 to only accept the input 	values of M,F,U and N. This constraint will make sure that the values that are 	entered into the database conforms to one of the ISO standard gender options.\
	2) Creating an explicit, 
\b user-defined domains
\b0  which can be used for multiple tables to ensure \
	that the gender column only accept the input values of M,F,U and N. Then we can use you that \
	domain to alter gender column in the 
\b \'93students\'94 
\b0 table.\
	\
(b) Writing DDL for the above approaches:\
	1) \cf2 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE students ADD CONSTRAINT genderType CHECK (gender IN ('M','F','U','N'));\cf0 \cb1 \kerning1\expnd0\expndtw0 \
	2) CREATE DOMAIN genderType AS CHAR(1) \
	    DEFAULT \'91U\'92\
	    CHECK(VALUE IN(\'91M\'92,\'92F\'92,\'92U\'92,\'92N\'92));\
\
	   ALTER TABLE students \
	   ALTER COLUMN gender\
	   SET DATA TYPE genderType;\
\
4) In order to ensure that the 
\b num_enrolled
\b0  cannot be higher than the 
\b max_enrollment
\b0 , I create a 
\b CHECK constraints
\b0  which will prevent any values of 
\b num_enrolled
\b0  that are higher than the 
\b max_enrollment 
\b0 to enter the database. \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE sections ADD CONSTRAINT num_Check CHECK (num_enrolled <= max_enrollment); \
\

\b \ul Part 2\
\

\b0 \ulnone a1p2.sql\
\

\b \ul Part 3\
\

\b0 \ulnone a1p3.sql \
\
\cf0 \cb1 \kerning1\expnd0\expndtw0 \
}